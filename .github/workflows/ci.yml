name: CI

on:
  pull_request:
    branches: ["**"]
  push:
    branches: ["**"]
    tags: ["v[0-9]*"]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - uses: coursier/cache-action@v6
      - uses: coursier/setup-action@v1
        with:
          jvm: temurin:1.17
          apps: mill

      - name: Build and test
        run: mill -k __.testCached + __.publishLocal

  update_release_draft:
    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    if: github.event_name == 'push'
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: coursier/cache-action@v6
      - uses: coursier/setup-action@v1
        with:
          jvm: temurin:1.17
          apps: mill

      - name: Import GPG key
        run: echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import

      - name: Publish
        run: >-
          mill mill.scalalib.PublishModule/publishAll
          --publishArtifacts __.publishArtifacts
          --sonatypeCreds "${{ secrets.SONATYPE_CREDS }}"
          --gpgArgs "--passphrase=${{ secrets.GPG_PASSPHRASE }},--batch,--pinentry-mode=loopback,--yes,-a,-b"
          --release true
          --sonatypeUri "https://s01.oss.sonatype.org/service/local"
          --sonatypeSnapshotUri "https://s01.oss.sonatype.org/content/repositories/snapshots"
          --readTimeout 600000
          --awaitTimeout 600000
